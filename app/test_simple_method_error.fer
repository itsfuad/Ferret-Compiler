// Simple test for method compatibility checking
type A struct {
    x: i32
};

fn (self: A) methodA() -> i32 {
    return self.x;
}

fn (self: A) methodB() -> i32 {
    return self.x + 1;
}

type B struct {
    x: i32
};

fn (self: B) methodA() -> i32 {
    return self.x;
}

// B is missing methodB

fn main() {
    let b: B = @B{x: 10};
    
    // This should fail - B is missing methodB  
    let a: A = b as A;
}
